# -*- coding: utf-8 -*-
"""Atividade4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PuKXgWcAUv8imkJ4KcgZP7N_IoO7B-w4
"""

#1. Elabore o programa que gere a sequência dos números naturais ímpares até 13.
# Mostre também a quantidade de números da sequência gerados, use contador.
ct = 0
for num in range (1,13,2):
    print (num, end=",")
    ct+=1
print(num+2, end=".")
print(f"\nA quantidade de números gerados é: {ct}")

#2. Elabore o programa que gere a sequência dos números naturais múltiplos de 3 até 21.
#Mostre também a soma dos números da sequência gerados, use somador.
soma = 0
for num in range (3,21,3):
    print (num, end=",")
    soma = soma + num
print(num+3, end=".")
soma = soma + num
print(f"\nA soma dos números gerados é: {soma}")

#3. Elabore o programa que gere a sequência do dobro dos números naturais até dez na ordem crescente.
#Mostre também a soma e a média aritmética da sequência gerada.
soma = 0
ct = 0
print("Sequência do dobro dos números naturais até 10:")
for num in range (1,11):
    dobro = num * 2
    print (dobro, end=" ")
    ct += 1
    soma = soma + dobro
media= soma/ct
print(f"\nA soma da sequência gerada é: {soma}")
print(f"A média da sequência é: {media} ")

#4. Implemente o programa que gere a sequência dos números naturais na ordem crescente até um valor
#final fornecido (digitado) pelo usuário. Mostre também a quantidade de valores da sequência gerada.
ct = 0
n = int(input("Digite um valor inteiro: "))
for num in range (1,(n)):
    print(num, end=" ")
    ct = ct + 1
print(f"\nA quantidade de valores da sequência gerada foi: {ct}")

#5. Implemente o programa que gere a sequência dos números naturais na ordem
#decrescente até o valor zero e o valor inicial será fornecido (digitado) pelo usuário.
#Mostre também a quantidade de valores da sequência gerada.
ct = 0
n = int(input("Digite um valor inteiro: "))
for num in range ((n),0,-1):
    print(num, end=" ")
    ct+=1
print(f"\nA quantidade de valores da sequência gerada foi: {ct}")